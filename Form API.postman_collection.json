{
	"info": {
		"_postman_id": "78992a79-9bf6-4e32-85ef-03247c11adb2",
		"name": "Form API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "23154608"
	},
	"item": [
		{
			"name": "Create User",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status is created, response is json\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"    pm.response.to.be.json;\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "email",
							"value": "{{email}}",
							"type": "text"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "text"
						},
						{
							"key": "password",
							"value": "{{password}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "localhost:8000/auth/users/",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"auth",
						"users",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Authenticate User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status is ok, response is json\", function () {\r",
							"    pm.response.to.be.ok;\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"try {\r",
							"    pm.globals.set(\"token\", pm.response.json().auth_token)    \r",
							"} catch(e) {\r",
							"    console.log(e)\r",
							"}\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "username",
							"value": "{{username}}",
							"type": "text"
						},
						{
							"key": "password",
							"value": "{{password}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "localhost:8000/auth/token/login",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"auth",
						"token",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get User",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status is ok, response is json\", function () {\r",
							"    pm.response.to.be.ok;\r",
							"    pm.response.to.be.json;\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Token {{token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "localhost:8000/auth/users/{{userId}}/",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"auth",
						"users",
						"{{userId}}",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Users",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status is ok, response is json\", function () {\r",
							"    pm.response.to.be.ok;\r",
							"    pm.response.to.be.json;\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Token {{token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "localhost:8000/auth/users/",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"auth",
						"users",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Form",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status is created, response is json\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"pm.test(\"Owner id is equal to user id\", function() {\r",
							"    pm.expect(parseInt(pm.globals.get(\"userId\"))).to.equal(\r",
							"        pm.response.json().owner\r",
							"    )\r",
							"})\r",
							"try {\r",
							"    pm.globals.set(\"formId\", pm.response.json().id);\r",
							"} catch(e) {\r",
							"    console.log(e);\r",
							"}"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Token {{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "title",
							"value": "Test form",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "localhost:8000/forms/",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"forms",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Text Question",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status is created, response is json\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"    pm.response.to.be.json;\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Token {{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "question",
							"value": "Test text question",
							"type": "text"
						},
						{
							"key": "order",
							"value": "1",
							"type": "text"
						},
						{
							"key": "correct_answer",
							"value": "Some answer",
							"type": "text"
						},
						{
							"key": "form",
							"value": "{{formId}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "localhost:8000/questions/text/",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"questions",
						"text",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Radio Question",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status is created, response is json\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"    pm.response.to.be.json;\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Token {{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "question",
							"value": "Test radio question",
							"type": "text"
						},
						{
							"key": "order",
							"value": "2",
							"type": "text"
						},
						{
							"key": "choices_list_string",
							"value": "[\"choice_1\", \"choice_2\", \"choice_3\"]",
							"type": "text"
						},
						{
							"key": "correct_answer",
							"value": "choice_1",
							"type": "text"
						},
						{
							"key": "form",
							"value": "{{formId}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "localhost:8000/questions/radio/",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"questions",
						"radio",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Checkbox Question",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status is created, response is json\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"    pm.response.to.be.json;\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Token {{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "question",
							"value": "Test radio question",
							"type": "text"
						},
						{
							"key": "order",
							"value": "3",
							"type": "text"
						},
						{
							"key": "choices_list_string",
							"value": "[\"choice_1\", \"choice_2\", \"choice_3\"]",
							"type": "text"
						},
						{
							"key": "correct_answers_string",
							"value": "[\"choice_1\", \"choice_2\"]",
							"type": "text"
						},
						{
							"key": "form",
							"value": "{{formId}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "localhost:8000/questions/checkbox/",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"questions",
						"checkbox",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Form Question List",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status is ok, response is json\", function () {\r",
							"    pm.response.to.be.ok;\r",
							"    pm.response.to.be.json;\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Token {{token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "localhost:8000/forms/{{formId}}/qlist/",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"forms",
						"{{formId}}",
						"qlist",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Another User",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status is created, response is json\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"    pm.response.to.be.json;\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "email",
							"value": "{{email_2}}",
							"type": "text"
						},
						{
							"key": "username",
							"value": "{{username_2}}",
							"type": "text"
						},
						{
							"key": "password",
							"value": "{{password}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "localhost:8000/auth/users/",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"auth",
						"users",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Authenticate Another User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status is ok, response is json\", function () {\r",
							"    pm.response.to.be.ok;\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"try {\r",
							"    pm.globals.set(\"token_2\", pm.response.json().auth_token)    \r",
							"} catch(e) {\r",
							"    console.log(e)\r",
							"}\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "username",
							"value": "{{username_2}}",
							"type": "text"
						},
						{
							"key": "password",
							"value": "{{password}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "localhost:8000/auth/token/login",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"auth",
						"token",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Can't Create Question of someone else Form",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status is forbidden, response is json\", function () {\r",
							"    pm.response.to.have.status(403);\r",
							"    pm.response.to.be.json;\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Token {{token_2}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "question",
							"value": "Test text question",
							"type": "text"
						},
						{
							"key": "order",
							"value": "1",
							"type": "text"
						},
						{
							"key": "correct_answer",
							"value": "Some answer",
							"type": "text"
						},
						{
							"key": "form",
							"value": "{{formId}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "localhost:8000/questions/text/",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"questions",
						"text",
						""
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "inherit"
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "username",
			"value": "test_user",
			"type": "string"
		},
		{
			"key": "email",
			"value": "test_user@mail.ru",
			"type": "string"
		},
		{
			"key": "password",
			"value": "321test_password",
			"type": "string"
		},
		{
			"key": "username_2",
			"value": "test_user_2",
			"type": "string"
		},
		{
			"key": "email_2",
			"value": "test_user_2@mail.ru",
			"type": "string"
		}
	]
}